name: Build Release

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # 如果一个平台失败，其他平台继续构建
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            build_command: pnpm build:desktop
            artifact_name: cardmind-windows
            asset_name: CardMind-Setup.exe
          - os: macos-latest
            build_command: pnpm build:desktop
            artifact_name: cardmind-macos
            asset_name: CardMind.dmg
          - os: ubuntu-latest
            build_command: pnpm build:desktop
            artifact_name: cardmind-linux
            asset_name: cardmind.AppImage

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      # Windows-specific setup
      - name: Setup Windows build dependencies
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          ./check-msvc.bat

      # Linux-specific dependencies
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      # Install dependencies
      - name: Install dependencies
        run: |
          pnpm install
          pnpm list

      # Build the application
      - name: Build
        run: ${{ matrix.build_command }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload artifacts
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            packages/web/dist-electron/*.exe
            packages/web/dist-electron/*.dmg
            packages/web/dist-electron/*.AppImage
          compression-level: 0  # 二进制文件不需要压缩
          retention-days: 5
